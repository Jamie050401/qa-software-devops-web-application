name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  Build-Test:
    runs-on: ubuntu-latest
    env:
      NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages
    steps:
    - uses: actions/checkout@v4
      with:
        ref: "main"
    - name: Setup dotnet v8.0.x
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
        cache: true
        cache-dependency-path: Application/packages.lock.json
    - name: Restore NuGet packages
      run: dotnet restore --locked-mode
    - name: Build solution
      run: dotnet build
    - name: Run unit tests
      run: dotnet test

  Static-Analysis:
    needs: Build-Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: "main"
          fetch-depth: 0
      - name: Run Qodana
        uses: JetBrains/qodana-action@v2023.3
        with:
          args: --baseline,qodana.sarif.json
        env:
          QODANA_TOKEN: ${{ secrets.QODANA_TOKEN }}

  Publish:
    needs: Static-Analysis
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        ref: "main"
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Build and push production Docker image
      uses: docker/build-push-action@v5
      with:
        file: Dockerfile
        push: true
        tags: jamie050401/qa-web-application-2:latest
