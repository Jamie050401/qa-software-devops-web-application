name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages
    steps:
    - uses: actions/checkout@v4
      with:
        ref: "main"
    - name: Setup dotnet v8.0.x
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
        cache: true
        cache-dependency-path: Application/packages.lock.json
    - name: Restore NuGet packages
      run: dotnet restore --locked-mode
    - name: Build solution
      run: dotnet build
    - name: Run unit tests
      run: dotnet test
    # TODO - Finish implementing i.e. qodana static analysis

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        ref: "main"
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Build and push production Docker image
      uses: docker/build-push-action@v5
      with:
        file: Dockerfile
        push: true
        build-args: ASPNETCORE_ENVIRONMENT=Production
        tags: |
          jamie050401/qa-web-application-2:latest
          jamie050401/qa-web-application-2:production
    - name: Build and push development Docker image
      uses: docker/build-push-action@v5
      with:
        file: Dockerfile
        push: true
        build-args: ASPNETCORE_ENVIRONMENT=Development
        tags: jamie050401/qa-web-application-2:development
